import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

class MyInfoPage extends StatefulWidget {
  const MyInfoPage({Key? key}) : super(key: key);

  @override
  _MyInfoPageState createState() => _MyInfoPageState();
}

class _MyInfoPageState extends State<MyInfoPage> {

  final String title_INTJ = "INTJ - Ng∆∞·ªùi qu√¢n s∆∞";
  final String strong_INTJ = "C√≥ l√Ω tr√≠, hi·ªÉu bi·∫øt r·ªông, ƒë·ªôc l·∫≠p, ki√™n ƒë·ªãnh, t√≤ m√≤ v√† linh ho·∫°t.";
  final String weak_INTJ = "Ki√™u ng·∫°o, xem th∆∞·ªùng c·∫£m x√∫c ng∆∞·ªùi kh√°c, hay ch·ªâ tr√≠ch, h∆°i hung nƒÉng, l√£ng m·∫°n";
  final String descr_INTJ = "INTJ l√† ng∆∞·ªùi c√≥ c√°c ƒë·∫∑c ƒëi·ªÉm t√≠nh c√°ch h∆∞·ªõng n·ªôi, ƒë·∫ßy tr·ª±c gi√°c, c√≥ suy nghƒ© v√† ƒë√°nh gi√° t·ªët."
      "Nh·ªØng nh√† chi·∫øn thu·∫≠t chu ƒë√°o n√†y th√≠ch ch√∫ tr·ªçng c√°c chi ti·∫øt c·ªßa cu·ªôc s·ªëng, √°p d·ª•ng s·ª± s√°ng t·∫°o, h·ª£p l√Ω v√†o m·ªçi vi·ªác h·ªç l√†m. "
      "Th·∫ø gi·ªõi n·ªôi t√¢m th∆∞·ªùng l√† m·ªôt th·∫ø gi·ªõi ri√™ng t∆∞ v√† ph·ª©c t·∫°p.";
  final String inlove_INTJ = "INTJ quan t√¢m ƒë·∫øn chi·ªÅu s√¢u v√† tr√≠ tu·ªá, v√† quan tr·ªçng s·ª± trung th·ª±c, c·ªüi m·ªü trong giao ti·∫øp. "
      "ƒê·ªëi v·ªõi h·ªç, m·ªôt m·ªëi quan h·ªá kh√¥ng d·ª± tr√™n nh·ªØng gi√° tr·ªã n√†y s·∫Ω kh√≥ c√≥ th·ªÉ l√¢u d√†i.";
  final String dating_INTJ = "INTP, INFJ, INFP";


  @override
  Widget build(BuildContext context) {

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        iconTheme: IconThemeData(
          color: Colors.deepPurple, //change your color here
        ),
        backgroundColor: Colors.white,
        elevation: 0,
        title: Text("Ch·ªânh s·ª≠a h·ªì s∆°", style: TextStyle(color: Colors.deepPurple),),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Container(
          padding: EdgeInsets.all(12),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              _title("H√¨nh ·∫£nh"),
              SizedBox(height: 10,),
              _imageView(),
              SizedBox(height: 30,),
              _title("Mi√™u t·∫£"),
              SizedBox(height: 10,),
              _bio(),
              SizedBox(height: 10,),
              _character(),
              SizedBox(height: 10,),
              _hobby(),
              SizedBox(height: 10,),
              _dating(),
              SizedBox(height: 30,),
              _title("Th√¥ng tin c∆° b·∫£n"),
              SizedBox(height: 10,),
              _detail("Chi·ªÅu cao", "175 cm", (){}),
              SizedBox(height: 10,),
              _detail("ƒê·∫øn t·ª´", "Ti·ªÅn Giang, Vi·ªát Nam", (){}),
              SizedBox(height: 10,),
              _detail("S·ªëng t·∫°i", "TP.HCM, Vi·ªát Nam", (){}),
              SizedBox(height: 10,),
              _detail("Ngh·ªÅ nghi·ªáp", "Sinh vi√™n", (){}),
              SizedBox(height: 30,),
              _title("S·ª± th·∫≠t th√∫ v·ªã"),
              SizedBox(height: 10,),
              _detail("16 nh√≥m t√≠nh c√°ch", "ENTP", (){
                _showTop16CharacterDialog();
              }),
              SizedBox(height: 50,),
            ],
          ),
        ),
      ),
    );
  }

  _title(String text) => Text(
    text,
    style: TextStyle(
      color: Colors.grey,
      fontWeight: FontWeight.w500
    ),
  );

  _imageView() => Container(
    height: 200,
    child: ListView(
      scrollDirection: Axis.horizontal,
      children: [
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        _image("https://firebasestorage.googleapis.com/v0/b/dating-app-689e4.appspot.com/o/145757914_1596428657212263_8128998582553759676_n.jpg?alt=media&token=c087b993-f8ce-4fea-be7f-6f220e7597a8"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
        // _image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Son_Tung_M-TP_1_%282017%29.png/1200px-Son_Tung_M-TP_1_%282017%29.png"),
      ],
    ),
  );

  _image(String url) => Container(
    width: 150,
    margin: EdgeInsets.only(right: 10),
    decoration: BoxDecoration(
      borderRadius: BorderRadius.all(Radius.circular(10)),
      image: DecorationImage(
        image: NetworkImage(url),
        fit: BoxFit.cover
      )
    ),
  );

  _bio() => Container(
    padding: EdgeInsets.all(16),
    height: 150,
    width: double.infinity,
    decoration: BoxDecoration(
      color: Colors.grey.withOpacity(0.1),
      borderRadius: BorderRadius.all(Radius.circular(10))
    ),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          "Bio",
          style: TextStyle(
            color: Colors.black,
            fontWeight: FontWeight.bold
          ),
        ),
        SizedBox(height: 10,),
        Text(
          "M√¨nh th√≠ch ƒëi d·∫°o v√†o m·ªói t·ªëi cu·ªëi tu·∫ßn. Th√≠ch nu√¥i ch√≥ v√† m√®o.",
          style: TextStyle(
            color: Colors.deepPurple,
            fontWeight: FontWeight.w500
          ),
          maxLines: 3,
          textAlign: TextAlign.justify,
        ),
      ],
    ),
  );

  _character() => Container(
    padding: EdgeInsets.all(16),
    width: double.infinity,
    decoration: BoxDecoration(
        color: Colors.grey.withOpacity(0.1),
        borderRadius: BorderRadius.all(Radius.circular(10))
    ),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          children: [
            Text(
              "T√≠nh c√°ch",
              style: TextStyle(
                color: Colors.black,
                fontWeight: FontWeight.bold
              ),
            ),
            Spacer(),
            GestureDetector(
              onTap: (){
                _showCharacterDialog();
              },
              child: Text(
                "C·∫≠p nh·∫≠t",
                style: TextStyle(
                    color: Colors.deepPurple,
                    fontWeight: FontWeight.bold
                ),
              ),
            ),
          ],
        ),
        SizedBox(height: 10,),
        Wrap(
          spacing: 20,
          runSpacing: 10,
          children: [
            _lable("ü§† T·ª± l·∫≠p"),
            _lable("üòê Can ƒë·∫£m"),
            _lable("üòä Th·∫≠n tr·ªçng"),
          ],
        )
      ],
    ),
  );

  _hobby() => Container(
    padding: EdgeInsets.all(16),
    width: double.infinity,
    decoration: BoxDecoration(
        color: Colors.grey.withOpacity(0.1),
        borderRadius: BorderRadius.all(Radius.circular(10))
    ),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          children: [
            Text(
              "S·ªü th√≠ch",
              style: TextStyle(
                  color: Colors.black,
                  fontWeight: FontWeight.bold
              ),
            ),
            Spacer(),
            GestureDetector(
              onTap: (){
                _showHobbyDialog();
              },
              child: Text(
                "C·∫≠p nh·∫≠t",
                style: TextStyle(
                    color: Colors.deepPurple,
                    fontWeight: FontWeight.bold
                ),
              ),
            ),
          ],
        ),
        SizedBox(height: 10,),
        Wrap(
          spacing: 20,
          runSpacing: 15,
          children: [
            _lable("üì∏ Ch·ª•p ·∫£nh"),
            _lable("üéñ Tham gia t√¨nh nguy·ªán"),
            _lable("üéÆ Game online"),
          ],
        )
      ],
    ),
  );

  _dating() => Container(
    padding: EdgeInsets.all(16),
    width: double.infinity,
    decoration: BoxDecoration(
        color: Colors.grey.withOpacity(0.1),
        borderRadius: BorderRadius.all(Radius.circular(10))
    ),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          children: [
            Text(
              "Ki·ªÉu h·∫πn h√≤",
              style: TextStyle(
                  color: Colors.black,
                  fontWeight: FontWeight.bold
              ),
            ),
            Spacer(),
            GestureDetector(
              onTap: (){
                _showDatingDialog();
              },
              child: Text(
                "C·∫≠p nh·∫≠t",
                style: TextStyle(
                    color: Colors.deepPurple,
                    fontWeight: FontWeight.bold
                ),
              ),
            ),
          ],
        ),
        SizedBox(height: 10,),
        Wrap(
          spacing: 20,
          runSpacing: 15,
          children: [
            _lable("üèç ƒêi du l·ªãch"),
            _lable("‚öΩ Ch∆°i th·ªÉ thao"),
            _lable("üéû Xem phim"),
          ],
        ),
      ],
    ),
  );

  _showCharacterDialog() => showModalBottomSheet(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(24),
          topRight: Radius.circular(24),
        ),
      ),
      context: context,
      builder: (context)=>Container(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            Text(
              "T√≠nh c√°ch c·ªßa b·∫°n nh∆∞ th·∫ø n√†o?",
              style: TextStyle(
                fontSize: 20,
                  color: Colors.deepPurple,
                  fontWeight: FontWeight.bold
              ),
            ),
            SizedBox(height: 10,),
            Text(
              "Ch·ªçn 1-3 m·ª•c ƒë·ªÉ mi√™u t·∫£ v·ªÅ b·∫°n",
              style: TextStyle(
                  fontSize: 13,
                  color: Colors.grey,
                  fontWeight: FontWeight.w500
              ),
            ),
            SizedBox(height: 30,),
            Wrap(
              spacing: 20,
              runSpacing: 15,
              children: [
                _lable("üòé Phi√™u l∆∞u"),
                _lable("üòä D·ªÖ g·∫ßn"),
                _lable("üßê L√Ω tr√≠"),
                _lable("üòá T·ªët b·ª•ng"),
                _lable("üôÇ Khi√™m t·ªën"),
                _lable("‚ò∫ Nh·∫°y c·∫£m"),
                _lable("üòâ T·ª± tin"),
                _lable("ü§† T·ª± l·∫≠p"),
                _lable("üòê Can ƒë·∫£m"),
                _lable("üòä Th·∫≠n tr·ªçng"),
                _lable("üòÜ Th·ª±c t·∫ø"),
                _lable("üòÇ C·ªüi m·ªü"),
                _lable("üôÉ H∆∞·ªõng n·ªôi"),
                _lable("ü§£ H∆∞·ªõng ngo·∫°i"),
                _lable("ü§≠ Th·∫≠t th√†"),
                _lable("üò¨ Chung th·ªßy"),
                _lable("üòÑ Vui v·∫ª"),
              ],
            ),
            SizedBox(height: 30,),
            _buttonSave(
                (){

                }
            ),
          ],
        ),
      )
  );

  _showHobbyDialog() => showModalBottomSheet(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(24),
          topRight: Radius.circular(24),
        ),
      ),
      context: context,
      builder: (context)=>Container(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            Text(
              "S·ªü th√≠ch c·ªßa b·∫°n nh∆∞ th·∫ø n√†o?",
              style: TextStyle(
                  fontSize: 20,
                  color: Colors.deepPurple,
                  fontWeight: FontWeight.bold
              ),
            ),
            SizedBox(height: 10,),
            Text(
              "Ch·ªçn 1-3 m·ª•c ƒë·ªÉ mi√™u t·∫£ v·ªÅ b·∫°n",
              style: TextStyle(
                  fontSize: 13,
                  color: Colors.grey,
                  fontWeight: FontWeight.w500
              ),
            ),
            SizedBox(height: 30,),
            Wrap(
              spacing: 20,
              runSpacing: 15,
              children: [
                _lable("üõç Mua s·∫Øm"),
                _lable("üéû Phim ·∫£nh"),
                _lable("‚úà Du l·ªãch"),
                _lable("‚öΩ Th·ªÉ thao"),
                _lable("ü§∏‚Äç‚ôÇ Yoga"),
                _lable("üí™ Gym"),
                _lable("üéñ Tham gia t√¨nh nguy·ªán"),
                _lable("üìö ƒê·ªçc s√°ch"),
                _lable("üçï ƒÇn u·ªëng"),
                _lable("üéµ √Çm nh·∫°c"),
                _lable("üé≠ Ng√¥n ng·ªØ"),
                _lable("üì∏ Ch·ª•p ·∫£nh"),
                _lable("üéÆ Game online"),
                _lable("üñº Ngh·ªá thu·∫≠t"),
                _lable("üêà ƒê·ªông v·∫≠t"),
              ],
            ),
            SizedBox(height: 30,),
            _buttonSave(
                    (){

                }
            ),
          ],
        ),
      )
  );

  _showDatingDialog() => showModalBottomSheet(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(24),
          topRight: Radius.circular(24),
        ),
      ),
      context: context,
      builder: (context)=>Container(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            Text(
              "Ki·ªÉu h·∫πn h√≤ c·ªßa b·∫°n nh∆∞ th·∫ø n√†o?",
              style: TextStyle(
                  fontSize: 20,
                  color: Colors.deepPurple,
                  fontWeight: FontWeight.bold
              ),
            ),
            SizedBox(height: 10,),
            Text(
              "Ch·ªçn 1-3 m·ª•c ƒë·ªÉ mi√™u t·∫£ v·ªÅ b·∫°n",
              style: TextStyle(
                  fontSize: 13,
                  color: Colors.grey,
                  fontWeight: FontWeight.w500
              ),
            ),
            SizedBox(height: 30,),
            Wrap(
              spacing: 20,
              runSpacing: 15,
              children: [
                _lable("üéè ƒêi picnic"),
                _lable("üéÆ Ch∆°i game"),
                _lable("üå≥ ƒêi d·∫°o"),
                _lable("üé∂ Nghe nh·∫°c"),
                _lable("üèç ƒêi du l·ªãch"),
                _lable("‚öΩ Ch∆°i th·ªÉ thao"),
                _lable("üéû Xem phim"),
                _lable("üë®‚Äç‚ù§Ô∏è‚Äçüë® ChƒÉm nh·∫Øn tin"),
                _lable("üéé H·ª©ng ƒëi ƒë√¢u ƒë√≥"),
                _lable("ü•ó N·∫•u ƒÉn chung"),
                _lable("ü•ò ƒêi ƒÉn"),
                _lable("ü•Ç ƒêi bar"),
                _lable("ü•§ ƒêi c√† ph√™"),
                _lable("üë®üèæ‚Äçü§ù‚Äçüë®üèº ƒêi c√πng nh√≥m b·∫°n"),
              ],
            ),
            SizedBox(height: 30,),
            _buttonSave(
                    (){

                }
            ),
          ],
        ),
      )
  );

  _showTop16CharacterDialog() => showModalBottomSheet(
    isScrollControlled: true,
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.only(
        topLeft: Radius.circular(24),
        topRight: Radius.circular(24),
      ),
    ),
    context: context,
    builder: (context)=>Container(
      padding: EdgeInsets.all(16),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          Text(
            "T√≠nh c√°ch th·∫≠t g√¨ c·ªßa b·∫°n l√† g√¨?",
            style: TextStyle(
                fontSize: 20,
                color: Colors.deepPurple,
                fontWeight: FontWeight.bold
            ),
          ),
          SizedBox(height: 10,),
          Text(
            "Kh√°m ph√° nh√≥m t√≠nh c√°ch c·ªßa b·∫°n v√† ng∆∞·ªùi ·∫•y d·ª±a tr√™n tr·∫Øc nghi·ªám 16 nh√≥m t√≠nh c√°ch",
            style: TextStyle(
                fontSize: 13,
                color: Colors.grey,
                fontWeight: FontWeight.w500
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: 30,),
          Wrap(
            spacing: 20,
            runSpacing: 15,
            children: [
              _characterBox(
                "INTJ",
                "https://www.topcv.vn/images/mbti/web/istj.png",
                (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
              _characterBox(
                  "INTJ",
                  "https://www.topcv.vn/images/mbti/web/istj.png",
                      (){_showCharacterDetailDialog(title_INTJ,strong_INTJ,weak_INTJ,descr_INTJ,inlove_INTJ,dating_INTJ);}
              ),
            ],
          ),
          SizedBox(height: 30,),
          Text(
            "Kh√¥ng bi·∫øt m√¨nh thu·ªôc nh√≥m t√≠nh c√°ch n√†o?",
            style: TextStyle(
                color: Colors.deepPurple,
                fontWeight: FontWeight.w500
            ),
          ),
        ],
      ),
    )
  );

  _showCharacterDetailDialog(String title, String strong, String weak, String descr, String inlove, String dating) => showModalBottomSheet(
      isScrollControlled: true,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(24),
          topRight: Radius.circular(24),
        ),
      ),
      context: context,
      builder: (context)=>Container(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          mainAxisSize: MainAxisSize.min,
          children: [
            SizedBox(height: 10,),

            Container(
              alignment: Alignment.center,
              child: Text(
                title,
                style: TextStyle(
                    fontSize: 20,
                    color: Colors.deepPurple,
                    fontWeight: FontWeight.bold
                ),
              ),
            ),

            SizedBox(height: 10,),
            Container(
              alignment: Alignment.center,
              child: Wrap(
                spacing: 20,
                runSpacing: 15,
                children: [
                  _lable("ü§≠ Th·∫≠t th√†"),
                  _lable("üò¨ Chung th·ªßy"),
                  _lable("üòÑ Vui v·∫ª"),
                ],
              ),
            ),

            SizedBox(height: 10,),
            Text(
              "ƒêi·ªÉm m·∫°nh",
              style: TextStyle(
                  color: Colors.pink,
                  fontWeight: FontWeight.bold
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10,),
            Text(
              strong,
              style: TextStyle(
                  height: 1.5
              ),
              textAlign: TextAlign.justify,
            ),

            SizedBox(height: 10,),
            Text(
              "ƒêi·ªÉm y·∫øu",
              style: TextStyle(
                  color: Colors.pink,
                  fontWeight: FontWeight.bold
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10,),
            Text(
              weak,
              style: TextStyle(
                  height: 1.5
              ),
              textAlign: TextAlign.justify,
            ),

            SizedBox(height: 10,),
            Text(
              "Mi√™u t·∫£",
              style: TextStyle(
                  color: Colors.pink,
                  fontWeight: FontWeight.bold
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10,),
            Text(
              descr,
              style: TextStyle(
                height: 1.5
              ),
              textAlign: TextAlign.justify,
            ),

            SizedBox(height: 10,),
            Text(
              "Khi trong m·ªëi quan h·ªá",
              style: TextStyle(
                  color: Colors.pink,
                  fontWeight: FontWeight.bold
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10,),
            Text(
              inlove,
              style: TextStyle(
                  height: 1.5
              ),
              textAlign: TextAlign.justify,
            ),

            SizedBox(height: 10,),
            Text(
              "Ph√π h·ª£p v·ªõi",
              style: TextStyle(
                  color: Colors.pink,
                  fontWeight: FontWeight.bold
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10,),
            Text(
              dating,
              style: TextStyle(
                  height: 1.5
              ),
              textAlign: TextAlign.justify,
            ),

            SizedBox(height: 30,),
            Container(
              alignment: Alignment.center,
              child: _buttonSave((){}),
            ),

            SizedBox(height: 30,)
          ],
        ),
      )
  );

  _lable(String text) => Container(
    padding: EdgeInsets.all(8),
    decoration: BoxDecoration(
      borderRadius: BorderRadius.all(Radius.circular(10)),
      color: Colors.grey.withOpacity(0.2)
    ),
    child: Text(
      text,
      style: TextStyle(
        fontSize: 15
      ),
    ),
  );

  _lableChoice(String text, bool isCheck) => Container(
    padding: EdgeInsets.all(8),
    decoration: BoxDecoration(
        borderRadius: BorderRadius.all(Radius.circular(10)),
        color: isCheck == false? Colors.grey.withOpacity(0.2) : Colors.deepPurple.withOpacity(0.3)
    ),
    child: GestureDetector(
      onTap: () async {
        setState(() {
          isCheck = true;
        });
      },
      child: Text(
        text,
        style: TextStyle(
            fontSize: 15
        ),
      ),
    ),
  );

  _buttonSave(Function function) => Container(
    decoration: BoxDecoration(
      borderRadius: BorderRadius.all(Radius.circular(20)),
      color: Colors.deepPurple
    ),
    child: FlatButton(
      onPressed: function(),
      child: Text("L∆∞u", style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),),
    ),
  );

  _detail(String name, String detail, Function funtion) => GestureDetector(
    onTap: (){
      funtion();
    },
    child: Container(
      padding: EdgeInsets.all(8),
      height: 50,
      decoration: BoxDecoration(
          borderRadius: BorderRadius.all(Radius.circular(10)),
          color: Colors.grey.withOpacity(0.1)
      ),
      child: Row(
        children: [
          Text(
            name,
            style: TextStyle(
                color: Colors.black,
                fontWeight: FontWeight.bold
            ),
          ),
          Spacer(),
          Text(
            detail,
            style: TextStyle(
                color: Colors.deepPurple,
                fontWeight: FontWeight.bold
            ),
          ),
        ],
      ),
    ),
  );

  _characterBox(String name, String url, funtion) => Container(
    child: GestureDetector(
      onTap: funtion,
      child: Column(
        children: [
          Container(
            width: 70,
            height: 70,
            decoration: BoxDecoration(
                shape: BoxShape.circle,
                image: DecorationImage(
                    image: NetworkImage(url),
                    fit: BoxFit.cover)),
          ),
          SizedBox(height: 5,),
          Text(
            name,
            style: TextStyle(
              color: Colors.black,
              fontWeight: FontWeight.w500
            ),
          ),
        ],
      ),
    ),
  );
}
